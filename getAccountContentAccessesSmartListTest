public void function getAccountContentAccessesSmartListTest() {
		var accountData = {
			accountID = ""
		};
		var mockAccount1 = createPersistedTestEntity('Account', accountData);
	
		var orderData = {
			orderID = "",
			account = {
				accountID = mockAccount1.getAccountID()
			}
		};
		var mockOrder1 = createPersistedTestEntity('Order', orderData);
		
		var orderItemData = {
			orderItemID = "",
			order = {
				orderID = mockOrder1.getOrderID()
			}
		};
		var mockOrderItem1 = createPersistedTestEntity('OrderItem', orderItemData);
		mockOrderItem1.setOrder(mockOrder1);//The orderItem association with Order has to be added like this
		
		var contentData1 = {
			contentID = ""
		};
		var mockContent1 = createPersistedTestEntity('Content', contentData1);
		
		var accountContentAccessData = {
			accountContentAccessID = "",
			account = {
				accountID = mockAccount1.getAccountID()
			},
			orderItem = {
				orderItemID = mockOrderItem1.getOrderItemID()
			},
			accessContents=[
				{
					contentid=mockContent1.getContentID()
				}
			]
		};
		var accountContentAccess1 = createPersistedTestEntity('AccountContentAccess', accountContentAccessData);
		
		
		var result = mockAccount1.getAccountContentAccessesSmartList().getRecords(refresh = true);
		request.debug(arrayLen(result));
		request.debug(mockAccount1.getAccountContentAccesses()[1].getaccountContentAccessID());
		request.debug(mockContent1.getContentID());
		request.debug(accountContentAccess1.getAccessContents()[1].getContentID());
//		assertEquals(mockAccount1.accountContentAccesses());